Description: Template to create a MySQL Instance with RDS and a S3 bucket

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "RDS Configuration"
        Parameters:
          - InstanceIdentifier
          - StorageSize
          - DBUser
          - DBPassword
Parameters:
  InstanceIdentifier:
    Type: String
    Default: ecommerceTESTING
    Description: 'Instance name. Default: ecommerceTESTING'
  StorageSize:
    Type: String
    Default: "20"
    Description: 'Database name (Gb). Default: 20'
  DBUser:
    Type: String
    Default: "admin"
    Description: 'Database username. Default: admin'
  DBPassword:
    Type: String
    Default: "ygheqwer890H!M"
    Description: 'Database username. Default: ygheqwer890H!M'
Resources:
  DBGroup:
    Type: AWS::RDS::DBParameterGroup
    Properties:
      Description: 'Parameter Group for the instance'
      Family: 'mysql5.7'
      Parameters:
        binlog_format: "ROW"
      Tags:
        - Key: Name
          Value: MySQLGroup
        - Key: Company
          Value: AnyCompany
  DBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Public Security Group for the RDS Instance
      VpcId: !ImportValue VPC
      GroupName: 'RDS Security Group'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
  RDS:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: 'ECommerce'
      DBInstanceIdentifier: !Ref InstanceIdentifier
      Engine: MySQL
      EngineVersion: "5.7.22"
      DBInstanceClass: db.t2.micro
      MultiAZ: false
      StorageType: gp2
      AllocatedStorage: !Ref StorageSize
      MasterUserPassword: !Ref DBPassword
      MasterUsername: !Ref DBUser
      BackupRetentionPeriod: 1
      CopyTagsToSnapshot: true
      DeletionProtection: false
      DBParameterGroupName: !Ref DBGroup
      DBSubnetGroupName: 'MySQLDBSubnetGroup'
      PubliclyAccessible: true
      VPCSecurityGroups:
        - !GetAtt DBSecurityGroup.GroupId
      Tags:
        - Key: Name
          Value: !Ref InstanceIdentifier
        - Key: Company
          Value: AnyCompany
  S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
Outputs:
  RdsDB:
    Description: Rds Database
    Value: !Ref RDS
  RDSEndpoint:
    Description: 'RDS database Endpoint'
    Value: !GetAtt RDS.Endpoint.Address
    Export:
      Name: RDSEndpoint
  S3BucketARN:
    Description: 'RDS database Endpoint'
    Value: !GetAtt S3Bucket.Arn 
    Export:
      Name: S3BucketARN
  S3BucketName:
    Description: 'RDS database Endpoint'
    Value: !Ref S3Bucket
    Export:
      Name: S3BucketName
  JDBCConnectionString:
    Description: 'RDS ConnectionString'
    Value: !Join ['', ['jdbc:mysql://', !GetAtt [RDS, Endpoint.Address], ':',
        !GetAtt [RDS, Endpoint.Port], /, 'ECommerce']]
    Export:
      Name: JDBCConnectionString